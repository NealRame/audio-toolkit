cmake_minimum_required(VERSION 2.6)

project(AudioToolkit)

string(TOUPPER "${CMAKE_BUILD_TYPE}" CMAKE_BUILD_TYPE)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/Debug)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/Debug/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/Release)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/Release/lib)
set(GENERATED_INCLUDES_DIRECTORY ${CMAKE_BINARY_DIR}/includes)

set(COMMON_CXX_FLAGS "-std=c++11 -Wall -Werror")
set(CMAKE_CXX_FLAGS_DEBUG "${COMMON_CXX_FLAGS} -g -O0")
set(CMAKE_CXX_FLAGS_RELEASE "${COMMON_CXX_FLAGS} -O3")

if(CMAKE_BUILD_TYPE MATCHES "DEBUG")
	set(CMAKE_BUILD_TYPE "DEBUG")
else()
	set(CMAKE_BUILD_TYPE "RELEASE")
endif()

# Generated includes directory
file(MAKE_DIRECTORY ${GENERATED_INCLUDES_DIRECTORY})

# Runtime output path
file(MAKE_DIRECTORY ${CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG})
file(MAKE_DIRECTORY ${CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE})

# Libraries output path
file(MAKE_DIRECTORY ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG})
file(MAKE_DIRECTORY ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE})

include_directories(${AudioToolkit_SOURCE_DIR})
include_directories(${GENERATED_INCLUDES_DIRECTORY})

if (CMAKE_BUILD_TYPE MATCHES "DEBUG")
link_directories(${CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG})
else()
link_directories(${CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE})
endif()

add_subdirectory(${AudioToolkit_SOURCE_DIR}/audio)
add_subdirectory(${AudioToolkit_SOURCE_DIR}/tests)
